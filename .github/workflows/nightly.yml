name: Nightly Refresh

on:
  schedule:
    - cron: "30 4 * * *"        # 04:30 UTC daily
  workflow_dispatch: {}

jobs:
  refresh:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (full history)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Show previous xgxa (if any)
        run: |
          if [ -f data/cache/xgxa_players.csv ]; then
            ls -lh data/cache/xgxa_players.csv || true
            cp data/cache/xgxa_players.csv /tmp/prev_xgxa.csv || true
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Phase 1 — Fetch FPL
        run: python pipeline/fetch_fpl_data.py all

      # Try UNDERSTAT first
      - name: Phase 2 — Ingest xG/xA (Understat)
        env:
          # Realistic UA reduces blocks
          UA: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36"
        run: |
          python - << 'PY'
          import tomllib, tomli_w, os
          path="configs/config.toml"
          with open(path,"rb") as f: cfg=tomllib.load(f)
          cfg.setdefault("user_agent",{})["value"]=os.environ.get("UA", cfg.get("user_agent",{}).get("value","Mozilla/5.0"))
          cfg.setdefault("xgxa",{})["provider"]="understat"
          with open(path,"wb") as f: tomli_w.dump(cfg,f)
          PY
          python pipeline/ingest_xgxa.py --season 2024 || true

      - name: Check xgxa size; if too small, try FBref
        env:
          UA: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36"
        run: |
          BYTES=$(wc -c < data/cache/xgxa_players.csv 2>/dev/null || echo 0)
          echo "Current xgxa size: $BYTES bytes"
          if [ "$BYTES" -lt 1000 ]; then
            echo "Too small — trying FBref..."
            python - << 'PY'
            import tomllib, tomli_w, os
            path="configs/config.toml"
            with open(path,"rb") as f: cfg=tomllib.load(f)
            cfg.setdefault("user_agent",{})["value"]=os.environ.get("UA", cfg.get("user_agent",{}).get("value","Mozilla/5.0"))
            cfg.setdefault("xgxa",{})["provider"]="fbref"
            with open(path,"wb") as f: tomli_w.dump(cfg,f)
            PY
            python pipeline/ingest_xgxa.py --season 2024 || true
          fi

      - name: Finalize xgxa (fallback to previous if still tiny)
        run: |
          BYTES=$(wc -c < data/cache/xgxa_players.csv 2>/dev/null || echo 0)
          echo "Final xgxa size after retries: $BYTES bytes"
          if [ "$BYTES" -lt 1000 ] && [ -f /tmp/prev_xgxa.csv ]; then
            echo "Still tiny — restoring previous xgxa_players.csv"
            cp /tmp/prev_xgxa.csv data/cache/xgxa_players.csv
          fi
          ls -lh data/cache/xgxa_players.csv || (echo "Missing xgxa_players.csv" && exit 1)

      - name: Phase 3 — Compute projections
        run: python pipeline/compute_phase3.py --next_n 5

      - name: Upload cache as artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: data-cache
          path: data/cache

      - name: Commit cache back to repo
        run: |
          git config user.name "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git add data/cache/xgxa_players.csv || true
          git add data/cache/projections_next_gw.csv || true
          git add data/cache/projections_next_5gws.csv || true
          git add data/cache/captaincy_rankings.csv || true
          git commit -m "Nightly cache update" || echo "No changes"
          git push
